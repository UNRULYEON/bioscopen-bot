// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model City {
  id String @id

  name   String
  Cinema Cinema[]
}

model Company {
  id String @id

  name   String
  emoji  String
  Cinema Cinema[]
}

model Cinema {
  id String @id

  name       String
  scrapeName String

  company          Company            @relation(fields: [companyId], references: [id], onDelete: Cascade)
  companyId        String
  city             City               @relation(fields: [cityId], references: [id], onDelete: Cascade)
  cityId           String
  CinemaSubscriber CinemaSubscriber[]
}

model Movie {
  id String @id

  letterboxdId String   @unique
  name         String
  releaseYear  Int?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  MovieSubscriber MovieSubscriber[]
}

model Subscriber {
  id String @id

  chatId            BigInt   @unique
  wantsToBeNotified Boolean
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  MovieSubscriber  MovieSubscriber[]
  CinemaSubscriber CinemaSubscriber[]
}

model MovieSubscriber {
  available Boolean
  notified  Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  movie        Movie      @relation(fields: [movieId], references: [id], onDelete: Cascade)
  movieId      String
  subscriber   Subscriber @relation(fields: [subscriberId], references: [id], onDelete: Cascade)
  subscriberId String

  @@id([movieId, subscriberId])
}

model CinemaSubscriber {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  cinema       Cinema     @relation(fields: [cinemaId], references: [id], onDelete: Cascade)
  cinemaId     String
  subscriber   Subscriber @relation(fields: [subscriberId], references: [id], onDelete: Cascade)
  subscriberId String

  @@id([cinemaId, subscriberId])
}
